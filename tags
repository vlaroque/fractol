!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = #-Wall -Wextra -Werror $/;"	m
DEP	Makefile	/^DEP = $(OBJ:%.o=%.d)$/;"	m
ECHO	Makefile	/^ECHO= echo -e$/;"	m
FLAGS	Makefile	/^FLAGS := -lmlx -framework OpenGL -framework AppKit$/;"	m
FRACTOL_H	inc/fractol.h	/^# define FRACTOL_H$/;"	d
HEADER_PATH	Makefile	/^HEADER_PATH := inc$/;"	m
IMG_H	inc/fractol.h	/^# define IMG_H /;"	d
IMG_W	inc/fractol.h	/^# define IMG_W /;"	d
INCLUDE	Makefile	/^INCLUDE := -I$(HEADER_PATH) $/;"	m
NAME	Makefile	/^NAME = fractol$/;"	m
OBJ	Makefile	/^OBJ = $(SRC:%.c=$(OBJ_PATH)\/%.o)$/;"	m
OBJ_PATH	Makefile	/^OBJ_PATH := obj$/;"	m
SRC	Makefile	/^SRC := main.c image.c julia.c mandelbrot.c debug.c matrix.c blackhole.c$/;"	m
SRC_PATH	Makefile	/^SRC_PATH := src$/;"	m
WIN_H	inc/fractol.h	/^# define WIN_H /;"	d
WIN_W	inc/fractol.h	/^# define WIN_W /;"	d
bits_in_pix	inc/fractol.h	/^	int		bits_in_pix;$/;"	m	struct:s_img
blackhole	src/blackhole.c	/^int		blackhole(t_data *data, t_point init, t_point pt, int dir)$/;"	f
count	src/blackhole.c	/^int		count = 0;$/;"	v
endian	inc/fractol.h	/^	int		endian;$/;"	m	struct:s_img
fill_img	src/main.c	/^int		fill_img(t_data *data, t_img *img)$/;"	f
fill_matrix	src/matrix.c	/^int		fill_matrix(t_data *data)$/;"	f
flood_fill	src/blackhole.c	/^int		flood_fill(t_data *data, int x, int y)$/;"	f
fract	inc/fractol.h	/^	int			(*fract)(t_coord, t_coord, int);$/;"	m	struct:s_data
ft_color_pix	src/image.c	/^int			ft_color_pix(t_img *img, int x, int y, int color)$/;"	f
height	inc/fractol.h	/^	int		height;$/;"	m	struct:s_img
imag	inc/fractol.h	/^	double		imag;$/;"	m	struct:s_complex
img_ptr	inc/fractol.h	/^	void		*img_ptr;$/;"	m	struct:s_data
img_ptr	inc/fractol.h	/^	void	*img_ptr;$/;"	m	struct:s_img
imgdata	inc/fractol.h	/^	t_img		*imgdata;$/;"	m	struct:s_data
julia	src/julia.c	/^int		julia(t_coord x, t_coord y, int max)$/;"	f
key_hook	src/main.c	/^int		key_hook(int keycode, t_data *data)$/;"	f
main	src/main.c	/^int		main(int ac, char **av)$/;"	f
mandelbrot	src/mandelbrot.c	/^int		mandelbrot(t_coord x, t_coord y, int max)$/;"	f
matrice	inc/fractol.h	/^	int			matrice[IMG_W * IMG_H];$/;"	m	struct:s_data
matrix_erase	src/matrix.c	/^int		matrix_erase(t_data *data)$/;"	f
matrix_to_img	src/matrix.c	/^int		matrix_to_img(t_data *data)$/;"	f
mlx_ptr	inc/fractol.h	/^	void		*mlx_ptr;$/;"	m	struct:s_data
mouse_pos_hook	src/debug.c	/^int		mouse_pos_hook(int x, int y, t_data *data)$/;"	f
mouse_wheel_hook	src/main.c	/^int		mouse_wheel_hook(int button, int x, int y, t_data *data)$/;"	f
new_img	src/image.c	/^t_img		*new_img(void *mlx_ptr, int width, int height)$/;"	f
pix_off	inc/fractol.h	/^	t_coord		pix_off;$/;"	m	struct:s_data
pixs	inc/fractol.h	/^	char	*pixs;$/;"	m	struct:s_img
point	src/blackhole.c	/^t_point point(int x, int y)$/;"	f
real	inc/fractol.h	/^	double		real;$/;"	m	struct:s_complex
s_complex	inc/fractol.h	/^typedef struct	s_complex$/;"	s
s_data	inc/fractol.h	/^typedef struct	s_data$/;"	s
s_img	inc/fractol.h	/^typedef struct	s_img$/;"	s
s_point	inc/fractol.h	/^typedef struct	s_point$/;"	s
show_matrix	src/matrix.c	/^int		show_matrix(t_data *data)$/;"	f
size_line	inc/fractol.h	/^	int		size_line;$/;"	m	struct:s_img
t_complex	inc/fractol.h	/^}				t_complex;$/;"	t	typeref:struct:s_complex
t_coord	inc/fractol.h	/^typedef double	t_coord;$/;"	t
t_data	inc/fractol.h	/^}				t_data;$/;"	t	typeref:struct:s_data
t_img	inc/fractol.h	/^}				t_img;$/;"	t	typeref:struct:s_img
t_point	inc/fractol.h	/^}				t_point;$/;"	t	typeref:struct:s_point
width	inc/fractol.h	/^	int		width;$/;"	m	struct:s_img
win_ptr	inc/fractol.h	/^	void		*win_ptr;$/;"	m	struct:s_data
x	inc/fractol.h	/^	int			x;$/;"	m	struct:s_point
x_or	inc/fractol.h	/^	t_coord		x_or;$/;"	m	struct:s_data
y	inc/fractol.h	/^	int			y;$/;"	m	struct:s_point
y_or	inc/fractol.h	/^	t_coord		y_or;$/;"	m	struct:s_data
